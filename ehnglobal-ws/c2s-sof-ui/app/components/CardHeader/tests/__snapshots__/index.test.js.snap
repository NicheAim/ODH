// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CardHeader /> snapshot tests should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardHeader
    title={
      <span>
        title
      </span>
    }
  >
    <span>
      test
    </span>
  </CardHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.section>
          <CardTitle__CardTitle>
            <span>
              title
            </span>
          </CardTitle__CardTitle>
        </styled.section>,
        Array [
          <styled.section>
            <span>
              test
            </span>
          </styled.section>,
        ],
      ],
      "columns": "1fr repeat(1, 150px)",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <CardTitle__CardTitle>
            <span>
              title
            </span>
          </CardTitle__CardTitle>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <span>
              title
            </span>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "title",
            },
            "ref": null,
            "rendered": "title",
            "type": "span",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1/.0",
        "nodeType": "class",
        "props": Object {
          "children": <span>
            test
          </span>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test",
          },
          "ref": null,
          "rendered": "test",
          "type": "span",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.section>
            <CardTitle__CardTitle>
              <span>
                title
              </span>
            </CardTitle__CardTitle>
          </styled.section>,
          Array [
            <styled.section>
              <span>
                test
              </span>
            </styled.section>,
          ],
        ],
        "columns": "1fr repeat(1, 150px)",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CardTitle__CardTitle>
              <span>
                title
              </span>
            </CardTitle__CardTitle>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span>
                title
              </span>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "title",
              },
              "ref": null,
              "rendered": "title",
              "type": "span",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1/.0",
          "nodeType": "class",
          "props": Object {
            "children": <span>
              test
            </span>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": "span",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
