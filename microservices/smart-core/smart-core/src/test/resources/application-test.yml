server:
  port: 8445

info:
  component: Omnibus Care Plan - SMART on FHIR Core Service
hystrix.command.default.execution.timeout.enabled: false
ribbon:
  ReadTimeout: 50000
spring:
  redis:
    host: localhost
smart-core:
  context-initializer: https://example-url.com/ocp-ui/smart-context
  oauth2: https://keycloak.example.com/auth/admin/realms/realm-example
  # http://localhost:8080/auth/realms/demo/protocol/openid-connect/auth
  oauth2-authorize: https://keycloak.example.com/auth/realms/realm-example/protocol/openid-connect/auth
  oauth2-token: https://keycloak.example.com/auth/realms/realm-example/protocol/openid-connect/token
  public-client-secret: cdfffa4d-61d4-4f65-bacd-aaf35b6ad1d5
  fhir: https://dev-fhir-proxy-hbj57tqowq-uc.a.run.app/api/fhir-proxy
  jwt_iss: https://example-url.com/
  jwt_sub: https://example-url.com/
  jwt_secret: DiEV3neyR4KOUoy3XqppVx75vOxwbLyi
  gcloudbucketname: zanenet-njinck-smartapps
  gcloudbucketlocation: US
  gcloudprojectid: zanenet-njinck
security:
  oauth2:
    client:
      client-id: smart-core
      client-secret: cdfffa4d-61d4-4f65-bacd-aaf35b6ad1d5
      access-token-uri: https://keycloak.example.com/auth/realms/realm-example/protocol/openid-connect/token
  basic:
    enabled: false
---
# updates configuration for docker environment
spring.profiles: docker
spring:
  redis:
    host: ${REDIS_HOST}
feign:
  client:
    config:
      oauth2ClientRestClient:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
