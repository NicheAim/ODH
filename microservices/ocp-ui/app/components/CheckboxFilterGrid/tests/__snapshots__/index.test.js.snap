// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CheckboxFilterGrid /> snapshot tests should match snapshot with column props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CheckboxFilterGrid
    columns="200px 150px 1f"
  >
    <Cell__Cell>
      child1
    </Cell__Cell>
    <Cell__Cell>
      child2
    </Cell__Cell>
    <Cell__Cell>
      child3
    </Cell__Cell>
  </CheckboxFilterGrid>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Cell__Cell>
          child1
        </Cell__Cell>,
        <Cell__Cell>
          child2
        </Cell__Cell>,
        <Cell__Cell>
          child3
        </Cell__Cell>,
      ],
      "columns": "200px 150px 1f",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child1",
        },
        "ref": null,
        "rendered": "child1",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child2",
        },
        "ref": null,
        "rendered": "child2",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child3",
        },
        "ref": null,
        "rendered": "child3",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Cell__Cell>
            child1
          </Cell__Cell>,
          <Cell__Cell>
            child2
          </Cell__Cell>,
          <Cell__Cell>
            child3
          </Cell__Cell>,
        ],
        "columns": "200px 150px 1f",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child1",
          },
          "ref": null,
          "rendered": "child1",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child2",
          },
          "ref": null,
          "rendered": "child2",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child3",
          },
          "ref": null,
          "rendered": "child3",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<CheckboxFilterGrid /> snapshot tests should match snapshot with default column calculation 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CheckboxFilterGrid>
    <Cell__Cell>
      child1
    </Cell__Cell>
    <Cell__Cell>
      child2
    </Cell__Cell>
    <Cell__Cell>
      child3
    </Cell__Cell>
  </CheckboxFilterGrid>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Cell__Cell>
          child1
        </Cell__Cell>,
        <Cell__Cell>
          child2
        </Cell__Cell>,
        <Cell__Cell>
          child3
        </Cell__Cell>,
      ],
      "columns": "100px repeat(2, 110px)",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child1",
        },
        "ref": null,
        "rendered": "child1",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child2",
        },
        "ref": null,
        "rendered": "child2",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "child3",
        },
        "ref": null,
        "rendered": "child3",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Cell__Cell>
            child1
          </Cell__Cell>,
          <Cell__Cell>
            child2
          </Cell__Cell>,
          <Cell__Cell>
            child3
          </Cell__Cell>,
        ],
        "columns": "100px repeat(2, 110px)",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child1",
          },
          "ref": null,
          "rendered": "child1",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child2",
          },
          "ref": null,
          "rendered": "child2",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "child3",
          },
          "ref": null,
          "rendered": "child3",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
