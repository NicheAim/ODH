// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WideDialog /> snapshot tests should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Styled(Dialog)
    open={true}
  >
    <span>
      test
    </span>
  </Styled(Dialog)>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "autoDetectWindowHeight": true,
      "autoScrollBodyContent": false,
      "children": <span>
        test
      </span>,
      "className": "sc-bdVaJa bDWFJH",
      "contentStyle": Object {
        "maxWidth": "none",
        "width": "85%",
      },
      "modal": false,
      "open": true,
      "repositionOnUpdate": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "test",
      },
      "ref": null,
      "rendered": "test",
      "type": "span",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoDetectWindowHeight": true,
        "autoScrollBodyContent": false,
        "children": <span>
          test
        </span>,
        "className": "sc-bdVaJa bDWFJH",
        "contentStyle": Object {
          "maxWidth": "none",
          "width": "85%",
        },
        "modal": false,
        "open": true,
        "repositionOnUpdate": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test",
        },
        "ref": null,
        "rendered": "test",
        "type": "span",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
